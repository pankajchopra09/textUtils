{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","Fragment","className","concat","mode","data-bs-theme","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aboutText","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","heading","value","onChange","event","target","style","backgroundColor","color","rows","newText","toUpperCase","showAlert","toLowerCase","newTxt","split","join","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","document","getElementById","select","navigator","clipboard","writeText","length","toFixed","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.0bb09a55.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n{ /*import { Link } from 'react-router-dom' */ }\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n    <nav className={`navbar navbar-expand-lg bg-${props.mode} navbar-${props.mode}`} data-bs-theme={`${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"\">Home</a>\r\n            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"\">{props.aboutText}</a>\r\n            {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> */}\r\n          </li>\r\n        </ul>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n          <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n        </form> */}\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" / >\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark mode</label>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  </nav>     \r\n    </>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title : PropTypes.string.isRequired,\r\n  aboutText : PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title : \"AppName\",\r\n  aboutText : \"About\"\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    \r\n    const handleUpc = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase\", \"success\");\r\n    }\r\n\r\n    const handlelwc = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase\", \"success\");\r\n    }\r\n\r\n    const handleSpeak = () => {\r\n        let msg = new SpeechSynthesisUtterance();\r\n        msg.text = text;\r\n        window.speechSynthesis.speak(msg);\r\n    }\r\n\r\n    const handleClear = () => {\r\n        let newText = '';\r\n        setText(newText)\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        let text = document.getElementById('myBox');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to clipboard\", \"success\");\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const removeExtraSpaces = () => {\r\n        let newTxt = text.split(/[ ]+/);\r\n        setText(newTxt.join(\" \"));\r\n    }\r\n\r\n    const [text, setText] = useState('Enter text here');\r\n\r\n    return (\r\n        <>\r\n    <div className='container'>\r\n        <h2>{props.heading}</h2>\r\n        <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleChange} style={{backgroundColor: props.mode ==='dark'?'gray':'white', color: props.mode ==='dark'?'white':'black'}} id=\"myBox\" rows=\"10\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary\" onClick={handleUpc}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handlelwc}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={removeExtraSpaces}>Remove Extra Spaces</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleSpeak}>Speak</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClear}>Clear</button>\r\n    </div>\r\n\r\n    <div className=\"container my-4\">\r\n        <h4>Your text summary</h4>\r\n        <p>{text.split(\" \").length} words, {text.length} characters</p>\r\n        <p>{(0.008 * text.split(\" \").length).toFixed()} Minutes read</p>\r\n        <h4>Preview</h4>\r\n        <p>{text}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}","import React, { useState } from 'react';\nimport './App.css';\nimport { About } from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport Alert from './Components/Alert';\n{ /*import {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n*/}\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n  \n  const showAlert = (message, type)=>{\n    setAlert({\n        msg: message,\n        type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#252f42';\n      document.body.style.color = 'white';\n      document.title = \"Text Utility -  Dark Mode\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      /* \n      setInterval(() => {\n        document.title = \"Text Utility is Amazing\";\n       }, 2000);\n       setInterval(() => {\n        document.title = \"Are you enjoying\";\n       }, 3000);\n       */\n    } else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n        document.title = \"Text Utility - Light Mode\";\n        showAlert(\"Dark mode has been disabled\", \"success\")\n    }\n  }\n  return (\n    <>\n      {/*<Navbar title=\"ReactApp\" aboutText=\"About Us\" />*/}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <TextForm heading=\"Enter the text to analyze below\" mode={mode} showAlert={showAlert}  />\n      {\n        /*\n      <Router>\n      <div className=\"container my-5\">\n        <Alert alert={alert}/>\n      <Routes>\n        <Route exact path=\"/About\" element={<About />} />\n        <Route exact path=\"/\" element={<TextForm heading=\"Enter the text to analyze below\" mode={mode} showAlert={showAlert}  />} />\n      </Routes>\n      </div>\n      </Router>\n        */\n      }\n\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}